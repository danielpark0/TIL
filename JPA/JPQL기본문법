
## JPQL
- JPQL은 객체지향 쿼리 언어, 테이블을 대상으로 쿼하는 것이 아니라 엔티티 객체를 대상으로 쿼리
- JPQL은 SQL을 추상화해서 특정 데이터베이스 SQL에 의존하지 않음
- JPQL은 결국 SQL로 변환됨.

### JPQL 문법
- select m from Member as m where m.age > 18
- 엔티티와 속성은 대소문자 구분 O
- JPQL 키워드는 대소문자 구분 X
- 엔티티 이름 사용, 테이블 이름이 아님
- 별칭은 필수(m)

### TypeQuery, Query
- TypeQuery :  반환 타입이 명확할 때 사용 (TypedQuery<Member> query = em…)
- Query : 반환 타입이 명확하지 않을 때 사용 (Query query = em…)

### 결과조회 API
- query.getResultList() : 결과가 하나 이상일 때, 리스트 반환, 결과가 없으면 빈 리스트 반환
- query.getSingleResult() : 결과가 정확히 하나, 단일 객체 반환, 없거나 둘이상이어도 Exception

### 파라미터 바인딩 - 이름기준, 위치기준
```
SELECT m FROM Member m where m.username=:username
query.setParameter("username", usernameParam);
```

```
SELECT m FROM Member m where m.username=?1
query.setParameter(1, usernameParam);
```
